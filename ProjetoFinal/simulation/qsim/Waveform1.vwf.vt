// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "05/24/2021 17:39:46"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          ProjetoFinal
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module ProjetoFinal_vlg_vec_tst();
// constants                                           
// general purpose registers
reg Botao_escolhe_0;
reg Botao_escolhe_1;
reg Botao_escolhe_2;
reg Botao_escolhe_3;
reg Botao_Inicial;
reg clock_ganhei;
reg Clock_Maquina_0;
reg Clock_Maquina_1;
reg Clock_Maquina_2;
reg Clock_Maquina_3;
reg On_Off;
reg Velocidade_escolha;
// wires                                               
wire [6:0] Desejado_Mostrador_0;
wire [6:0] Desejado_Mostrador_1;
wire [6:0] Desejado_Mostrador_2;
wire [6:0] Desejado_Mostrador_3;
wire [6:0] Escolhido_Mostrador_0;
wire [6:0] Escolhido_Mostrador_1;
wire [6:0] Escolhido_Mostrador_2;
wire [6:0] Escolhido_Mostrador_3;
wire [3:0] Numero_desejado_0;
wire [3:0] Numero_desejado_1;
wire [3:0] Numero_desejado_2;
wire [3:0] Numero_desejado_3;
wire [3:0] Numero_escolhido_0;
wire [3:0] Numero_escolhido_1;
wire [3:0] Numero_escolhido_2;
wire [3:0] Numero_escolhido_3;
wire Vitoria;

// assign statements (if any)                          
ProjetoFinal i1 (
// port map - connection between master ports and signals/registers   
	.Botao_escolhe_0(Botao_escolhe_0),
	.Botao_escolhe_1(Botao_escolhe_1),
	.Botao_escolhe_2(Botao_escolhe_2),
	.Botao_escolhe_3(Botao_escolhe_3),
	.Botao_Inicial(Botao_Inicial),
	.clock_ganhei(clock_ganhei),
	.Clock_Maquina_0(Clock_Maquina_0),
	.Clock_Maquina_1(Clock_Maquina_1),
	.Clock_Maquina_2(Clock_Maquina_2),
	.Clock_Maquina_3(Clock_Maquina_3),
	.Desejado_Mostrador_0(Desejado_Mostrador_0),
	.Desejado_Mostrador_1(Desejado_Mostrador_1),
	.Desejado_Mostrador_2(Desejado_Mostrador_2),
	.Desejado_Mostrador_3(Desejado_Mostrador_3),
	.Escolhido_Mostrador_0(Escolhido_Mostrador_0),
	.Escolhido_Mostrador_1(Escolhido_Mostrador_1),
	.Escolhido_Mostrador_2(Escolhido_Mostrador_2),
	.Escolhido_Mostrador_3(Escolhido_Mostrador_3),
	.Numero_desejado_0(Numero_desejado_0),
	.Numero_desejado_1(Numero_desejado_1),
	.Numero_desejado_2(Numero_desejado_2),
	.Numero_desejado_3(Numero_desejado_3),
	.Numero_escolhido_0(Numero_escolhido_0),
	.Numero_escolhido_1(Numero_escolhido_1),
	.Numero_escolhido_2(Numero_escolhido_2),
	.Numero_escolhido_3(Numero_escolhido_3),
	.On_Off(On_Off),
	.Velocidade_escolha(Velocidade_escolha),
	.Vitoria(Vitoria)
);
initial 
begin 
#1000000 $finish;
end 

// Velocidade_escolha
initial
begin
	Velocidade_escolha = 1'b1;
	# 1000;
	repeat(99)
	begin
		Velocidade_escolha = 1'b0;
		Velocidade_escolha = #5000 1'b1;
		# 5000;
	end
	Velocidade_escolha = 1'b0;
	Velocidade_escolha = #5000 1'b1;
end 

// Botao_Inicial
initial
begin
	Botao_Inicial = 1'b0;
	Botao_Inicial = #80000 1'b1;
	Botao_Inicial = #10000 1'b0;
end 

// On_Off
initial
begin
	On_Off = 1'b1;
end 

// Clock_Maquina_0
always
begin
	Clock_Maquina_0 = 1'b0;
	Clock_Maquina_0 = #1000 1'b1;
	#1000;
end 

// Clock_Maquina_1
initial
begin
	Clock_Maquina_1 = 1'b1;
	# 1000;
	repeat(199)
	begin
		Clock_Maquina_1 = 1'b0;
		Clock_Maquina_1 = #2500 1'b1;
		# 2500;
	end
	Clock_Maquina_1 = 1'b0;
	Clock_Maquina_1 = #2500 1'b1;
end 

// Clock_Maquina_2
always
begin
	Clock_Maquina_2 = 1'b0;
	Clock_Maquina_2 = #1000 1'b1;
	#1000;
end 

// Clock_Maquina_3
initial
begin
	Clock_Maquina_3 = 1'b1;
	# 1000;
	repeat(249)
	begin
		Clock_Maquina_3 = 1'b0;
		Clock_Maquina_3 = #2000 1'b1;
		# 2000;
	end
	Clock_Maquina_3 = 1'b0;
	Clock_Maquina_3 = #2000 1'b1;
end 

// Botao_escolhe_0
initial
begin
	Botao_escolhe_0 = 1'b0;
	Botao_escolhe_0 = #160000 1'b1;
	Botao_escolhe_0 = #10000 1'b0;
end 

// Botao_escolhe_1
initial
begin
	Botao_escolhe_1 = 1'b0;
	Botao_escolhe_1 = #80000 1'b1;
	Botao_escolhe_1 = #10000 1'b0;
end 

// Botao_escolhe_2
initial
begin
	Botao_escolhe_2 = 1'b0;
	Botao_escolhe_2 = #160000 1'b1;
	Botao_escolhe_2 = #10000 1'b0;
end 

// Botao_escolhe_3
initial
begin
	Botao_escolhe_3 = 1'b0;
	Botao_escolhe_3 = #120000 1'b1;
	Botao_escolhe_3 = #10000 1'b0;
end 

// clock_ganhei
always
begin
	clock_ganhei = 1'b0;
	clock_ganhei = #1000 1'b1;
	#1000;
end 
endmodule

